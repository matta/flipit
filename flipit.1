.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FLIPIT 1"
.TH FLIPIT 1 "2004-10-30" "flipit version 0.3.6" "flipit 0.3.6"
.SH "NAME"
flipit \- control the X10 Firecracker (CM17A)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& flipit [-h] [-t tty] [COMMAND ARGS] [COMMAND ARGS]...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes flipit version 0.3.6.
.PP
Flipit allows you to control X10 devices with your Unix computer by
means of a Firecracker (model number \s-1CM17A\s0) plugged into a serial
port.
.PP
X10 is a method of transmitting control commands to devices over
regular home power lines.  The Firecracker is a device manufactured by
X10 Ltd.  See http://www.x10.com/ for product information.
.SH "OPTIONS"
.IX Header "OPTIONS"
First pass any options to flipit, then pass any commands.  For a list of
commands, see the \s-1COMMANDS\s0 section below.  Now, for the options...
.IP "help" 4
.IX Item "help"
.Vb 1
\&  -h
.Ve
.Sp
Displays the usage message.
.IP "tty" 4
.IX Item "tty"
.Vb 1
\&  -t tty
.Ve
.Sp
Set the tty flipit will use.  This is usually set in the configuration
file \fIflipit.conf\fR, but this option lets you override it, mainly for
testing purposes.
.SH "COMMANDS"
.IX Header "COMMANDS"
After any of the above options, you pass any number of commands on the
command line.  The commands are flip, dim and brighten.
.PP
Most of the commands take a \*(L"device\-specifier\*(R" argument.  This is just
a way to specify a given X10 device with a string of characters.
Device specifiers are comprised of a house code (a letter \*(L"a\*(R" to \*(L"p\*(R")
and a device code (a number 1 to 16).  E.g. a10
.PP
For concrete examples, see the \s-1EXAMPLES\s0 section.
.IP "brighten" 4
.IX Item "brighten"
.Vb 1
\&  brighten device-specifier steps
.Ve
.Sp
Brighten a device by a given number of steps.  Steps can be from 1 to 6.
.IP "dim" 4
.IX Item "dim"
.Vb 1
\&  dim device-specifier steps
.Ve
.Sp
Dim a device by a given number of steps.  Steps can be from 1 to 6.
.IP "flip" 4
.IX Item "flip"
.Vb 1
\&  flip device-specifier on|off
.Ve
.Sp
Flip a device on or off.  The first argument is a device specifier
(see above).  The next argument is either \*(L"on\*(R" or \*(L"off.\*(R"
.SH "ERRORS"
.IX Header "ERRORS"
If everything goes well, flipit will exit with a value of zero.  Upon
error, it will print the reason why on stderr and exit with a non-zero
exit value.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
The following will turn device 5 in house code B on:
.PP
\&\f(CW\*(C`flipit flip b5 on\*(C'\fR
.PP
The following will first turn device 10 in house code C off, then turn
device 16 in house code A on:
.PP
\&\f(CW\*(C`flipit flip c10 off flip a16 on\*(C'\fR
.PP
The following will dim device a5 by 2 steps, then brighten device d7 by 4
steps.
.PP
\&\f(CW\*(C`flipit dim a5 2 brighten d7 4\*(C'\fR
.SH "FILES"
.IX Header "FILES"
flipit reads the filename of the tty device to use from the
\&\fIflipit.conf\fR file.  The \fIflipit.conf\fR file is usually in the
\&\fI/usr/local/etc\fR directory, but can be changed at compile time.
.SH "NOTES"
.IX Header "NOTES"
This is an \s-1ALPHA\s0 version of flipit.  Not all features are implemented.
.PP
A similar and more full featured program is called BottleRocket.
.SH "BUGS"
.IX Header "BUGS"
Flipit doesn't create any lock files when accessing the tty.  There should at
least be an option to do this for those using the cm17a on the same serial
port as their modem or similar.
.PP
There are reports of the brighten command always taking the lamp to the full
brightness.  I haven't been able to reproduce that here.  Some have suggested
to me that this happens only with older lamp controllers.  Any suggestions or
fixes are appreciated.
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
Flipit does no security checking itself.  If it finds that it can open
the tty device named in \fIflipit.conf\fR it will be happy to do so.
.SH "AUTHOR"
.IX Header "AUTHOR"
Matt Armstrong <gmatta@gmail.com>
